import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# По данным выборки
# (n = 100)
# требуется:
# 1. Составить статистическое распределение выборки, предварительно записав дискретный вариационный ряд.
# 2. Составить интервальный ряд распределения относительных частот.
# 3. Построить гистограмму относительных частот.
# 4. Составить эмпирическую функцию распределения.
# 5. Построить график эмпирической функции распределения.
# 6. Найти основные числовые характеристики вариационного ряда:
#  выборочное среднее Xв

#  выборочную дисперсию Dв

#  выборочное среднее квадратическое отклонение

#  коэффициент вариации Vв

# 7. Пояснить смысл полученных результатов.
# Данные выборки
data = np.array([
    14.6, 15.2, 14.1, 14.1, 15.0, 14.0, 15.0, 15.1, 15.5, 15.9,
    15.5, 14.2, 14.0, 14.5, 14.7, 15.5, 15.5, 14.2, 14.4, 14.4,
    14.4, 16.4, 15.7, 14.4, 14.1, 15.5, 14.9, 15.1, 15.1, 14.8,
    14.4, 16.3, 14.1, 14.1, 14.6, 14.2, 14.9, 14.7, 14.8, 15.5,
    16.4, 14.6, 14.5, 14.9, 14.2, 15.1, 14.4, 16.0, 16.3, 15.5,
    15.8, 18.3, 14.2, 16.0, 14.9, 14.0, 14.2, 14.2, 14.2, 14.9,
    14.8, 14.4, 15.8, 14.1, 15.4, 14.8, 14.2, 14.0, 14.4, 16.2,
    14.6, 14.0, 17.4, 15.9, 15.3, 14.4, 14.0, 14.1, 15.4, 15.4,
    14.4, 15.5, 14.8, 15.7, 14.1, 14.7, 14.6, 14.4, 14.2, 16.6,
    14.0, 14.1, 15.7, 14.8, 14.1, 14.6, 14.0, 14.1, 15.5, 15.4
])

# 1. Дискретный вариационный ряд
value_counts = pd.Series(data).value_counts().sort_index()
discrete_variation_series = value_counts.reset_index()
discrete_variation_series.columns = ['Значение', 'Частота']

print("Дискретный вариационный ряд:")
print(discrete_variation_series)

bins = np.arange(14, 19, 0.5)  # Определяем интервалы
hist, edges = np.histogram(data, bins=bins)


interval_distribution = pd.DataFrame({
    'Интервал': [f"{edges[i]:.1f} - {edges[i + 1]:.1f}" for i in range(len(edges) - 1)],
    'Частота': hist,
    'Относительная частота': hist / len(data)
})

print("\nИнтервальный ряд распределения относительных частот:")
print(interval_distribution)


plt.figure(figsize=(12, 6))
sns.histplot(data, bins=bins, stat="probability", kde=False, color='c', label='Гистограмма относительных частот', alpha=0.6)
plt.title('Гистограмма относительных частот')
plt.xlabel('Значения')
plt.ylabel('Относительная частота')
plt.grid()
plt.legend()
plt.show()


sorted_data = np.sort(data)
ecdf = np.arange(1, len(sorted_data) + 1) / len(sorted_data)


plt.figure(figsize=(12, 6))
plt.step(sorted_data, ecdf, label='Эмпирическая функция распределения', where='post')
plt.title('Эмпирическая функция распределения')
plt.xlabel('Значения')
plt.ylabel('Эмпирическая частота')
plt.grid()
plt.legend()
plt.show()


mean_x = np.mean(data)  # выборочное среднее
variance_dv = np.var(data, ddof=1)  # выборочная дисперсия
std_dev_v = np.std(data, ddof=1)  # выборочное среднее квадратическое отклонение
coefficient_of_variation_v = std_dev_v / mean_x * 100  # коэффициент вариации в процентах


print(f"\nОсновные числовые характеристики:")
print(f"Выборочное среднее : {mean_x:.2f}")
print(f"Выборочная дисперсия : {variance_dv:.2f}")
print(f"Выборочное среднее квадратическое отклонение : {std_dev_v:.2f}")
print(f"Коэффициент вариации : {coefficient_of_variation_v:.2f}%")

# 7. Пояснение результатов
# Смысл результатов: 
# Выборочное среднее показывает, что в среднем данные находятся на уровне ~14.56.
# Выборочная дисперсия и стандартное отклонение показывают разброс данных, где стандартное отклонение ~0.52,
# что говорит о том, что значения в выборке в среднем отклоняются от среднего на 0.52.
# Коэффициент вариации позволяет оценить относительную изменчивость данных; в данном случае это ~3.60%, 
# что говорит о том, что разброс значений невелик относительно среднего, и выборка достаточно однородна.